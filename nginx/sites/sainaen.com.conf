# redirects to the main https://sainaen.com
server {
    listen [::]:80;
    listen 80;
    server_name sainaen.com www.sainaen.com;
    return 301 https://sainaen.com$request_uri;
}

# ugh, all this stuff just to do SSL redirect
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    server_name www.sainaen.com;

    include security_headers/generic.conf;

    # SSL
    include ssl/hsts_1y.conf;
    ssl_certificate /etc/letsencrypt/live/sainaen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sainaen.com/privkey.pem;

    return 301 https://sainaen.com$request_uri;
}

# main config

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name sainaen.com;

    root /var/www/sainaen.com;

    include security_headers/generic.conf;
    # CSP:
    # everything restricted, except inline styles
    add_header Content-Security-Policy "default-src 'none'; style-src 'unsafe-inline'; frame-ancestors 'none'; report-uri https://sainaen.report-uri.com/r/d/csp/enforce";

    # SSL
    include ssl/hsts_1y.conf;
    ssl_certificate /etc/letsencrypt/live/sainaen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sainaen.com/privkey.pem;

    # instead of 404 error page show index
    error_page 404 /index.html;
}


# tmp.sainaen.com

server {
    listen [::]:80;
    listen 80;
    server_name tmp.sainaen.com;
    return 301 https://tmp.sainaen.com$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name tmp.sainaen.com;

    root /var/www/tmp.sainaen.com;

    include security_headers/generic.conf;

    # SSL
    include ssl/hsts_1y.conf;
    ssl_certificate /etc/letsencrypt/live/tmp.sainaen.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tmp.sainaen.com/privkey.pem;

    # show 404.html for both 404 and 403 (happens most often because there's no index.html)
    error_page 403 =404 /404.html;
    error_page 404 /404.html;

    location /jupyter {
        # Jupyter
        client_max_body_size 50M;
        proxy_pass http://localhost:8888;

        # websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}
